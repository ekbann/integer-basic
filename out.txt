
10 REM TAB
20 DIM B(16)
25 DIM C(2*8)
28 DIM D(6+10)
30 PRINT "END"
50 END

start
  line
    10
    comment	REM TAB
  line
    20
    dim
      B
      16
  line
    25
    dim
      C
      mul_exp
        2
        *
        8
  line
    28
    dim
      D
      add_exp
        6
        +
        10
  line
    30
    print	"END"
  line
    50
    end

Tree(Token('RULE', 'start'), [Tree(Token('RULE', 'line'), [Token('INT', '10'), Tree('comment', [Token('COMMENT', 'REM TAB')])]), Tree(Token('RULE', 'line'), [Token('INT', '20'), Tree('dim', [Token('VAR_ID', 'B'), Token('INT', '16')])]), Tree(Token('RULE', 'line'), [Token('INT', '25'), Tree('dim', [Token('VAR_ID', 'C'), Tree(Token('RULE', 'mul_exp'), [Token('INT', '2'), Token('MUL_OP', '*'), Token('INT', '8')])])]), Tree(Token('RULE', 'line'), [Token('INT', '28'), Tree('dim', [Token('VAR_ID', 'D'), Tree(Token('RULE', 'add_exp'), [Token('INT', '6'), Token('ADD_OP', '+'), Token('INT', '10')])])]), Tree(Token('RULE', 'line'), [Token('INT', '30'), Tree('print', [Token('STRING', '"END"')])]), Tree(Token('RULE', 'line'), [Token('INT', '50'), Tree('end', [])])])

.include "macros.inc"
.include "header.inc"

L10:		; REM TAB
L20:		; DIM B(16)
L25:		; DIM C(undefined)
		PushInt 2
		PushInt 8
		jsr UMUL
		MoveW BUFP, C		; VAR_ID = stored at current buffer pointer
		jsr PULL		; update BUFP += size of VAR_ID
		clc
		lda BUFP
		adc r0L
		sta BUFP
		lda BUFP+1
		adc r0H
		sta BUFP+1
L28:		; DIM D(undefined)
		PushInt 6
		PushInt 10
		jsr ADD
		MoveW BUFP, D		; VAR_ID = stored at current buffer pointer
		jsr PULL		; update BUFP += size of VAR_ID
		clc
		lda BUFP
		adc r0L
		sta BUFP
		lda BUFP+1
		adc r0H
		sta BUFP+1
L30:		LoadAddress S0		; to r0
		jsr PrString
		PrintNewline
L50:		rts

S0:		.asciiz "end"
B:		.res 16
C:		.res 2
D:		.res 2
BUFFER:

.include "io.asm"
.include "math.asm"
