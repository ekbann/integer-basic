; Bishop's 32-bit Fixed-Point
;
; siii.iiii | ffff.ffff : ffff.ffff : ffff.ffff
;    INT		FRACTION
;
; INT: -128 to +127

TOP 	= R0,R1
BOT 	= R2,R3
RESULT	= R4,R5
SIGN	= R6

; COMPUTE:	RESULT = TOP * BOT
;

MULT:		LDA	TOP+3
		EOR	BOT+3
		STA	SIGN

		LDA	TOP+3
		BPL	TOPOK
		LDX	#3
LOOP1:		LDA	TOP,X
		EOR	#$FF
		STA	TOP,X
		DEX
		BPL	LOOP1

TOPOK:		LDA	BOT+3
		BMI	BOTOK
		LDX	#3
LOOP2:		LDA	BOT,X
		EOR	#$FF
		STA	BOT,X
		DEX
		BPL	LOOP2

BOTOK:		LSR	BOT+3
		BCC	NOTCLEAR
		LDA	#0
		STA	RESULT+0
		STA	RESULT+1
		STA	RESULT+2
		STA	RESULT+3
		BEQ	GO

NOTCLEAR:	LDX	#3
LOOP3:		LDA	TOP,X
		STA	RESULT,X
		DEX
		BPL	LOOP3

GO:		LDX	#24
		LSR	TOP+3
MULTLOOP:	ROR	TOP+2
		ROR	TOP+1
		ROR	TOP+0
		ASL	BOT+0
		ROL	BOT+1
		ROL	BOT+2
		BCS	IGNORE
		LDA	RESULT+0
		ADC	TOP+0
		STA	RESULT+0
		LDA	RESULT+1
		ADC	TOP+1
		STA	RESULT+1
		LDA	RESULT+2
		ADC	TOP+2
		STA	RESULT+2
		BCC	NEXT
		INC	RESULT+3
IGNORE:		CLC
NEXT:		DEX
		BNE	MULTLOOP
		BIT	SIGN
		BPL	DONE
		LDX	#3
LOOP4:		LDA	RESULT,X
		EOR	#$FF
		STA	RESULT,X
		DEX
		BPL	LOOP4
DONE:		RTS









