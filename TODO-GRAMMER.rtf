{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;\red0\green0\blue255;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;\cssrgb\c1680\c19835\c100000;}
\margl1440\margr1440\vieww10000\viewh16000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf2 RED=DONE\
\cf3 BLUE=DOING\
\cf0 BLACK=TODO\
\
basic_grammar = """\
    start: line+\
\
\cf2     line: INT statement [(":" statement)*]\
\cf0 \
\cf2     ?statement: ("HOME" | "CLS") -> home\
              | "END" -> end\
\cf0               | "DATA" constant [("," constant)*] -> data\
              | "READ" ID [("," ID)*] -> read\
              | "CALL" expression -> call\
\cf3               | "GOTO" expression -> goto\
\cf0               | "GOSUB" expression -> gosub\
              | "RETURN" -> return\
              | "POKE" expression "," expression -> poke\
\cf2               | "TAB" expression -> tab\
              | "VTAB" expression -> vtab\
              | "LOCATE" expression "," expression -> locate\
\cf3               | "DIM" (VAR_ID | STR_ID) "(" expression ")" [("," ID "(" expression ")")*] -> dim\
\cf0               | "INPUT" [STRING ","] ID [("," ID)*] -> input\
\cf3               | ("PRINT" | "?") (expression (PRINT_OP expression?)*)? -> print\
\cf0               | "IF" expression "THEN" (INT | statement) -> if\
\cf2               | "NEXT" VAR_ID [("," VAR_ID)*] -> next\
              | "FOR" VAR_ID "=" expression "TO" expression ("STEP" expression)? -> for\
              | "COLOR" "=" expression -> color\
              | "LET"? (VAR_ID | STR_ID) "=" expression -> assignment\
              | COMMENT -> comment\
\cf0               | "POP" -> pop\
\cf2               | "GR" -> gr\
\cf3               | "TEXT" -> text\
\cf2               | "PLOT" expression "," expression -> plot\
\cf0               | "HLIN" expression "," expression "AT" expression -> hlin\
              | "VLIN" expression "," expression "AT" expression -> vlin\
              | STR_ID "(" INT ")" "=" (STRING | STR_ID) -> concat\
\
    ?expression: or_exp\
    \
    ?or_exp: [(expression "OR")*] and_exp\
\
    ?and_exp: [(and_exp "AND")*] not_exp\
\
    ?not_exp: "NOT" not_exp -> not\
            | compare_exp\
\
    ?compare_exp: [(compare_exp REL_OP)*] add_exp\
\
\cf2     ?add_exp: [(add_exp ADD_OP)*] mul_exp\
\cf0 \
\cf2     ?mul_exp: [(mul_exp MUL_OP)*] neg_exp\
\cf0 \
    ?neg_exp: "-" power_exp -> neg\
            | power_exp\
\
    ?power_exp: power_exp "^" sub_exp -> power\
              | sub_exp\
\
    ?sub_exp: "(" expression ")"\
            | value\
\
    ?value: (VAR_ID | STR_ID)\
          | STR_ID "(" INT "," INT ")" -> substring\
          | "ABS" "(" expression ")" -> abs\
          | "LEN" "(" expression ")" -> len\
          | "PEEK" "(" expression ")" -> peek\
          | "RND" "(" expression ")" -> rnd\
          | "SGN" "(" expression ")" -> sgn\
          | "ASC" "(" expression ")" -> asc\
          | "PDL" "(" expression ")" -> pdl\
          | "SCRN" "(" expression "," expression ")"\
          | constant\
\
    ?constant: INT\
             | STRING\
\
    PRINT_OP: "," | ";"\
    REL_OP: "=" | "#" | "!=" | ">=" | ">" | "<=" | "<>" | "<"\
    ADD_OP: "+" | "-"\
    MUL_OP: "*" | "/" | "%" | "MOD"\
    VAR_ID: (LETTER)(LETTER|INT)*\
    STR_ID: VAR_ID "$"\
    ID: STR_ID | VAR_ID\
    STRING: "\\\\"" /.*?/ "\\\\""\
    COMMENT: "REM" /[^\\\\n]/*\
\
    %import common.LETTER\
    %import common.INT\
    %import common.WS\
    %ignore WS\
"""}